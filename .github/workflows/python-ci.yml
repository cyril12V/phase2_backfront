# .github/workflows/python-ci.yml

name: Python Backend CI

on:
  push:
    branches: [ "main", "master", "develop" ]
  pull_request:
    branches: [ "main", "master", "develop" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Étape 1: Installer Git LFS explicitement (sécurité)
    - name: Install Git LFS
      run: |
        sudo apt-get update
        sudo apt-get install -y git-lfs
        git lfs install --system

    # Étape 2: Checkout code avec LFS et debug
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true
    # Active le debug pour cette étape spécifique si besoin de plus d'infos
    # env:
    #   ACTIONS_STEP_DEBUG: true

    # Étape 3: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: '**/requirements.txt'

    # Étape 4: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Étape 5: Run Pytest
    - name: Run Pytest
      run: |
        # Vérifie si le modèle existe MAINTENANT après checkout LFS
        echo "--- Vérification de l'existence du modèle ---"
        ls -l models/
        if [ ! -f "models/face_landmarker_v2_with_blendshapes.task" ]; then
           echo "::error::Modèle LFS models/face_landmarker_v2_with_blendshapes.task NON TROUVÉ après checkout!"
           # Tente un pull manuel LFS comme dernière chance
           echo "--- Tentative de git lfs pull manuel ---"
           git lfs pull
           # Re-vérifie
           ls -l models/
           if [ ! -f "models/face_landmarker_v2_with_blendshapes.task" ]; then
              echo "::error::Modèle LFS toujours NON TROUVÉ après pull manuel!"
              # exit 1 # Fait échouer si le modèle est indispensable
           else
              echo "Modèle trouvé après pull manuel."
           fi
        else
            echo "Modèle LFS trouvé après checkout."
        fi
        echo "--- Fin de la vérification ---"

        # Crée les dossiers nécessaires
        mkdir -p tests/test_data
        # Pas besoin de créer 'models' si le checkout fonctionne
        # Pas besoin de copier le modèle si le chemin est bien géré par config.py

        export TESTING=true
        pytest